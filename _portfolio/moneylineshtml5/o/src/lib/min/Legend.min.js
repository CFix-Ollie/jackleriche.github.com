/**
	 * Legend
	 * Used to show and manage the game legend / prize table. All interaction with the
	 * Legend is through this class, and any prizes won will be recorded via the static bank
	 * class.
	 * @author E-scape Interactive
	 * @version 1.0
 **/(function(e){"use strict";var t,n=e.com.camelot,r=n.iwg,i=r.lib,s=i.MEvent,o=e.com.camelot.iwg.lib.R,u=n.core,a=!0,f=3,l=600,c=3,h=30,p=!1,d=!1,v=function(){var e=[],t=!1,n=[];this.getRevealArray=function(){return e};this.getRevealDelay=function(){return l};this.getHasWon=function(){return t};this.getSequentialReveal=function(){return a};this.getLegendRows=function(){return n};this.setHasWon=function(e){t=e};this.setRevealArray=function(t){e=t};this.setLegendRows=function(e){n=e}};v.prototype.isSequentialReveal=function(){return this._isSequentialReveal};v.prototype.pushLegendRow=function(e,t){var n=this.getLegendRows(),r=new Array(e,t);n.push(r);this.setLegendRows(n)};v.prototype.updateLegend=function(e,t,n){var i,a=t,f,c=n,h,p=0;for(var d=0;d<this.getLegendRows().length;d++){h=this.getLegendRows()[d][1].length;f=0;for(var v=0;v<h;v++){i=this.getLegendRows()[d][1][v];if(i.getIsRevealed()===!0)f++;else if(parseInt(e)==i.getTicketLabel()){p++;i.setIsRevealed(!0);n||i.reveal("reveal",i,p*this.getRevealDelay());var m=this.getRevealArray();m.push(i);this.setRevealArray(m);f++;this.getSequentialReveal()&&(a+=l)}}if(f==h&&this.getLegendRows()[d][0].getWinReveal()===!1){var g=this.getLegendRows()[d][0],y=!1;if(o._ticketWinner==0){o.halt();u.IWG.ame("error",{mes:["XML manipulation error, code 1"]})}if(!c){g.reveal("winPrizeReveal",g,p*500+1e3);for(var v=0;v<h;v++){var i=this.getLegendRows()[d][1][v];i.reveal("winReveal",i,p*500+1e3)}}else{var b=g.ticketLabel;o.simBank=b;if(parseInt(o.simBank)!==o._ticketPrizeAmount){o.halt();u.IWG.ame("error",{mes:["XML manipulation error, code 2"]})}}}var w=this}r.IWGEM.dispatchEvent(s.ADDTURN);setTimeout(function(){r.IWGEM.dispatchEvent(s.LEGENDENDTURN)},a)};r._class("iwg.lib.Legend",v)})(window);
